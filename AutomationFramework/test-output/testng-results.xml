<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="8" total="14" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="TestSuite" duration-ms="53570" started-at="2019-11-02T20:42:08Z" finished-at="2019-11-02T20:43:02Z">
    <groups>
    </groups>
    <test name="UnitTesting" duration-ms="28491" started-at="2019-11-02T20:42:08Z" finished-at="2019-11-02T20:42:36Z">
      <class name="com.unitTestCases.TC_LaunchGoogleSearch3">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@3a8624]" name="startTest" is-config="true" duration-ms="26150" started-at="2019-11-02T20:42:08Z" finished-at="2019-11-02T20:42:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@3a8624]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-11-02T20:42:34Z" finished-at="2019-11-02T20:42:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.unitTestCases.TC_LaunchGoogleSearch3.TestMethodThree()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="TestMethodThree()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@3a8624]" name="TestMethodThree" duration-ms="469" started-at="2019-11-02T20:42:34Z" finished-at="2019-11-02T20:42:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMethodThree -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@3a8624]" name="afterTestMethod" is-config="true" duration-ms="132" started-at="2019-11-02T20:42:35Z" finished-at="2019-11-02T20:42:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMethodThree status=SUCCESS method=TC_LaunchGoogleSearch3.TestMethodThree()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@3a8624] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@3a8624]" name="tearDown" is-config="true" duration-ms="1711" started-at="2019-11-02T20:42:35Z" finished-at="2019-11-02T20:42:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.unitTestCases.TC_LaunchGoogleSearch3 -->
      <class name="com.unitTestCases.TC_LaunchGoogleSearch2">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@1ce4f0a]" name="startTest" is-config="true" duration-ms="26099" started-at="2019-11-02T20:42:08Z" finished-at="2019-11-02T20:42:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@1ce4f0a]" name="beforeTestMethod" is-config="true" duration-ms="1" started-at="2019-11-02T20:42:34Z" finished-at="2019-11-02T20:42:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.unitTestCases.TC_LaunchGoogleSearch2.TestMethodTwo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="FAIL" signature="TestMethodTwo()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@1ce4f0a]" name="TestMethodTwo" duration-ms="63" started-at="2019-11-02T20:42:34Z" finished-at="2019-11-02T20:42:34Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Page Title expected value: Googl is not matching with actual value: Google]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Page Title expected value: Googl is not matching with actual value: Google
at com.pageObjects.GooglePage.AT(GooglePage.java:44)
at com.unitTestCases.TC_LaunchGoogleSearch2.TestMethodTwo(TC_LaunchGoogleSearch2.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMethodTwo -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@1ce4f0a]" name="afterTestMethod" is-config="true" duration-ms="214" started-at="2019-11-02T20:42:34Z" finished-at="2019-11-02T20:42:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMethodTwo status=FAILURE method=TC_LaunchGoogleSearch2.TestMethodTwo()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@1ce4f0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@1ce4f0a]" name="tearDown" is-config="true" duration-ms="1736" started-at="2019-11-02T20:42:34Z" finished-at="2019-11-02T20:42:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.unitTestCases.TC_LaunchGoogleSearch2 -->
      <class name="com.unitTestCases.TC_LaunchGoogleSearch1">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@1fdc050]" name="startTest" is-config="true" duration-ms="20672" started-at="2019-11-02T20:42:08Z" finished-at="2019-11-02T20:42:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@1fdc050]" name="beforeTestMethod" is-config="true" duration-ms="9" started-at="2019-11-02T20:42:29Z" finished-at="2019-11-02T20:42:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.unitTestCases.TC_LaunchGoogleSearch1.TestMethodOne(com.DataFolder.TestEntity) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="TestMethodOne(com.DataFolder.TestEntity)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@1fdc050]" name="TestMethodOne" duration-ms="949" started-at="2019-11-02T20:42:29Z" data-provider="TestMethod" finished-at="2019-11-02T20:42:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.DataFolder.TestEntity@195c6fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMethodOne -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@1fdc050]" name="afterTestMethod" is-config="true" duration-ms="818" started-at="2019-11-02T20:42:30Z" finished-at="2019-11-02T20:42:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMethodOne status=SUCCESS method=TC_LaunchGoogleSearch1.TestMethodOne(com.DataFolder.TestEntity)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@1fdc050] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@1fdc050]" name="tearDown" is-config="true" duration-ms="2036" started-at="2019-11-02T20:42:30Z" finished-at="2019-11-02T20:42:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.unitTestCases.TC_LaunchGoogleSearch1 -->
    </test> <!-- UnitTesting -->
    <test name="IntegrationTesting" duration-ms="24710" started-at="2019-11-02T20:42:37Z" finished-at="2019-11-02T20:43:02Z">
      <class name="com.unitTestCases.TC_LaunchGoogleSearch3">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@9838eb]" name="startTest" is-config="true" duration-ms="20701" started-at="2019-11-02T20:42:37Z" finished-at="2019-11-02T20:42:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@9838eb]" name="beforeTestMethod" is-config="true" duration-ms="1" started-at="2019-11-02T20:42:58Z" finished-at="2019-11-02T20:42:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.unitTestCases.TC_LaunchGoogleSearch3.TestMethodThree()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="TestMethodThree()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@9838eb]" name="TestMethodThree" duration-ms="384" started-at="2019-11-02T20:42:58Z" finished-at="2019-11-02T20:42:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMethodThree -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@9838eb]" name="afterTestMethod" is-config="true" duration-ms="1680" started-at="2019-11-02T20:42:58Z" finished-at="2019-11-02T20:43:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMethodThree status=SUCCESS method=TC_LaunchGoogleSearch3.TestMethodThree()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@9838eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch3@9838eb]" name="tearDown" is-config="true" duration-ms="1925" started-at="2019-11-02T20:43:00Z" finished-at="2019-11-02T20:43:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.unitTestCases.TC_LaunchGoogleSearch3 -->
      <class name="com.unitTestCases.TC_LaunchGoogleSearch2">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@11053e1]" name="startTest" is-config="true" duration-ms="20724" started-at="2019-11-02T20:42:37Z" finished-at="2019-11-02T20:42:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@11053e1]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-11-02T20:42:58Z" finished-at="2019-11-02T20:42:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.unitTestCases.TC_LaunchGoogleSearch2.TestMethodTwo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="FAIL" signature="TestMethodTwo()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@11053e1]" name="TestMethodTwo" duration-ms="26" started-at="2019-11-02T20:42:58Z" finished-at="2019-11-02T20:42:58Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Page Title expected value: Googl is not matching with actual value: Google]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Page Title expected value: Googl is not matching with actual value: Google
at com.pageObjects.GooglePage.AT(GooglePage.java:44)
at com.unitTestCases.TC_LaunchGoogleSearch2.TestMethodTwo(TC_LaunchGoogleSearch2.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMethodTwo -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@11053e1]" name="afterTestMethod" is-config="true" duration-ms="188" started-at="2019-11-02T20:42:58Z" finished-at="2019-11-02T20:42:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMethodTwo status=FAILURE method=TC_LaunchGoogleSearch2.TestMethodTwo()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@11053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch2@11053e1]" name="tearDown" is-config="true" duration-ms="2967" started-at="2019-11-02T20:42:58Z" finished-at="2019-11-02T20:43:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.unitTestCases.TC_LaunchGoogleSearch2 -->
      <class name="com.unitTestCases.TC_LaunchGoogleSearch1">
        <test-method status="PASS" signature="beforeTestSuite()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@17d0008]" name="beforeTestSuite" is-config="true" duration-ms="358" started-at="2019-11-02T20:42:08Z" finished-at="2019-11-02T20:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestSuite -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@17d0008]" name="startTest" is-config="true" duration-ms="18207" started-at="2019-11-02T20:42:37Z" finished-at="2019-11-02T20:42:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@17d0008]" name="beforeTestMethod" is-config="true" duration-ms="1" started-at="2019-11-02T20:42:55Z" finished-at="2019-11-02T20:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.unitTestCases.TC_LaunchGoogleSearch1.TestMethodOne(com.DataFolder.TestEntity) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="TestMethodOne(com.DataFolder.TestEntity)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@17d0008]" name="TestMethodOne" duration-ms="566" started-at="2019-11-02T20:42:55Z" data-provider="TestMethod" finished-at="2019-11-02T20:42:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.DataFolder.TestEntity@8cdd42]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMethodOne -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@17d0008]" name="afterTestMethod" is-config="true" duration-ms="547" started-at="2019-11-02T20:42:56Z" finished-at="2019-11-02T20:42:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMethodOne status=SUCCESS method=TC_LaunchGoogleSearch1.TestMethodOne(com.DataFolder.TestEntity)[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@17d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@17d0008]" name="tearDown" is-config="true" duration-ms="3734" started-at="2019-11-02T20:42:56Z" finished-at="2019-11-02T20:43:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="AfterTestSuite()[pri:0, instance:com.unitTestCases.TC_LaunchGoogleSearch1@17d0008]" name="AfterTestSuite" is-config="true" duration-ms="141" started-at="2019-11-02T20:43:02Z" finished-at="2019-11-02T20:43:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestSuite -->
      </class> <!-- com.unitTestCases.TC_LaunchGoogleSearch1 -->
    </test> <!-- IntegrationTesting -->
  </suite> <!-- TestSuite -->
</testng-results>
